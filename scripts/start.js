const { spawn } = require('child_process');
const path = require('path');
const fs = require('fs');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
const dbPath = path.join(process.cwd(), 'database.sqlite');

if (!fs.existsSync(dbPath)) {
  console.log('üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º...');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  const initProcess = spawn('node', ['scripts/init-db.js'], {
    stdio: 'inherit'
  });
  
  initProcess.on('close', (code) => {
    if (code === 0) {
      console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      startApp();
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
      process.exit(1);
    }
  });
} else {
  console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  startApp();
}

function startApp() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º Next.js
  const appProcess = spawn('npm', ['start'], {
    stdio: 'inherit'
  });
  
  appProcess.on('close', (code) => {
    console.log(`–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –∫–æ–¥–æ–º: ${code}`);
    process.exit(code);
  });
} 